(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const n=s(377),a=s(613),{lightningChart:o,emptyLine:r,UIElementBuilders:i,UIBackgrounds:l,emptyFill:c,SolidLine:d,AxisTickStrategies:u,AxisScrollStrategies:h,UIOrigins:m,TimeFormattingFunctions:g,UIDraggingModes:S,MouseStyles:p,Themes:f}=n,{createProgressiveTraceGenerator:w}=a,y=window.location.search,x="true"===new URLSearchParams(y).get("full"),M=x?10:3,k=x?10:3,I=6e4,T=o({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({numberOfColumns:M,numberOfRows:k+1,theme:f[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setSplitterStyle(new d({thickness:0})),A=T.createUIPanel({columnIndex:0,rowIndex:0,columnSpan:M}),b=x?24:64,C=T.engine.container.getBoundingClientRect().height;T.setRowHeight(0,k*b/(C-b));const E=[];for(let e=0;e<M;e+=1)for(let t=0;t<k;t+=1){const s=T.createChartXY({columnIndex:e,rowIndex:t+1}).setTitleFillStyle(c).setTitleMargin({top:0,bottom:0}).setPadding(0).setMouseInteractions(!1).setCursor((e=>e.setTickMarkerXVisible(!1).setTickMarkerYVisible(!1).setAutoFitStrategy(void 0)));s.getDefaultAxisX().setTickStrategy(u.Empty).setMouseInteractions(!1).setScrollStrategy(h.progressive).setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-I,stopAxisAfter:!1}))).setStrokeStyle(r).setAnimationScroll(!1),s.getDefaultAxisY().setTickStrategy(u.Empty).setMouseInteractions(!1).setStrokeStyle(r).setAnimationScroll(!1),E.push(s)}A.addUIElement(i.TextBox.setBackground(l.None)).setText(M*k+" live channels (1 ms resolution) 1 minute history").setMouseInteractions(!1).setPosition({x:50,y:100}).setOrigin(m.CenterTop),x||A.addUIElement(i.TextBox).setText("Click here to show full 10x10 dashboard").setPosition({x:50,y:100}).setOrigin(m.CenterTop).setMargin(30).setDraggingMode(S.notDraggable).setMouseStyle(p.Point).onMouseClick((()=>{let e=window.location.href;e+=(e.split("?")[1]?"&":"?")+"full=true",window.location.href=e}));const P=E.map(((e,t)=>e.addPointLineAreaSeries({dataPattern:"ProgressiveX",automaticColorIndex:t}).setName(`Channel ${t+1}`).setStrokeStyle((e=>e.setThickness(1))).setAreaFillStyle(c).setMaxSampleCount(I)));Promise.all(new Array(10).fill(0).map((e=>w().setNumberOfPoints(I).generate().toPromise().then((e=>{const t=10+2e3*Math.random(),s=.03*t,n=e.reduce(((e,t)=>Math.min(e,t.y)),Number.MAX_SAFE_INTEGER),a=(e.reduce(((e,t)=>Math.max(e,t.y)),-Number.MAX_SAFE_INTEGER)-n)/2,o=n+a;return e.map((e=>t+(e.y-o)/a*s))})).then((e=>(e.push(...e.slice().reverse()),e)))))).then((e=>{const t=e[0].length,s=P.map((t=>({series:t,dataSet:e[Math.round(Math.random()*(e.length-1))]}))),n=[];s.forEach((e=>{const t=n.find((t=>t.dataSet===e.dataSet));t?t.seriesList.push(e.series):n.push({dataSet:e.dataSet,seriesList:[e.series]})}));const a=n.length;let o=-3e4;const r=()=>{const e=window.performance.now(),s=n.map((e=>[]));for(let r=o+1;r<e;r+=1){let e=r%t;for(;e<0;)e+=t;for(let t=0;t<a;t+=1){const a=n[t].dataSet[e];s[t].push(a)}o=r}n.forEach(((e,t)=>{const n=s[t];e.seriesList.forEach((e=>{e.appendSamples({yValues:n})}))})),requestAnimationFrame(r)};r()}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);