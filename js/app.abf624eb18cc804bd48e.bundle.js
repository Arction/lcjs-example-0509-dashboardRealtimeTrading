(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,s)=>{const n=s(809),a=s(27),{lightningChart:o,emptyLine:i,UIElementBuilders:r,UIBackgrounds:l,emptyFill:d,SolidFill:c,SolidLine:u,ColorRGBA:m,AxisTickStrategies:g,AxisScrollStrategies:h,UILayoutBuilders:x,UIOrigins:S,TimeFormattingFunctions:T,UIDraggingModes:f,MouseStyles:p,Themes:y}=n,{createProgressiveTraceGenerator:w}=a,b=window.location.search,E="true"===new URLSearchParams(b).get("full"),P=E?10:3,I=E?10:3,M=6e4,k=o().Dashboard({numberOfColumns:P,numberOfRows:I+1,disableAnimations:!0}).setSplitterStyle(new u({thickness:0})),C=k.createUIPanel({columnIndex:0,rowIndex:0,columnSpan:P}),v=E?24:64,D=k.engine.container.getBoundingClientRect().height;k.setRowHeight(0,I*v/(D-v));const F=[];for(let e=0;e<P;e+=1)for(let t=0;t<I;t+=1){const s=k.createChartXY({columnIndex:e,rowIndex:t+1}).setTitleFillStyle(d).setTitleMarginTop(0).setTitleMarginBottom(0).setPadding(0).setMouseInteractions(!1).setAutoCursor((e=>e.disposeTickMarkerX().disposeTickMarkerY().setAutoFitStrategy(void 0)));s.getDefaultAxisX().setTickStrategy(g.Empty).setMouseInteractions(!1).setScrollStrategy(h.progressive).setInterval(-6e4,0),s.getDefaultAxisY().setTickStrategy(g.Empty).setMouseInteractions(!1),F.push(s)}C.addUIElement(r.TextBox.setBackground(l.None)).setText(P*I+" live trading channels (1 ms resolution) 1 minute history").setMouseInteractions(!1).setPosition({x:50,y:100}).setOrigin(S.CenterTop),E||C.addUIElement(r.TextBox).setText("Click here to show full 10x10 dashboard").setPosition({x:50,y:100}).setOrigin(S.CenterTop).setMargin(30).setDraggingMode(f.notDraggable).setMouseStyle(p.Point).onMouseClick((()=>{let e=window.location.href;e+=(e.split("?")[1]?"&":"?")+"full=true",window.location.href=e}));const A=F.map((e=>{const t=e.addUIElement(x.Column,{x:e.uiScale,y:e.getDefaultAxisY()}).setOrigin(S.LeftTop).setPosition({x:0,y:e.getDefaultAxisY().getInterval().end}).setMouseInteractions(!1).setBackground((e=>e.setStrokeStyle(i)));e.getDefaultAxisY().onScaleChange(((e,s)=>t.setPosition({x:0,y:s}))),t.addElement(r.TextBox).setText("< Stock name >").setTextFont((e=>e.setSize(8))).setMargin({bottom:-6});const s=t.addElement(x.Row).setMargin({bottom:-6}),n=t.addElement(x.Row);s.addElement(r.TextBox).setText("Last value:").setTextFont((e=>e.setSize(8)));const a=s.addElement(r.TextBox).setText("").setTextFont((e=>e.setSize(8)));return n.addElement(r.TextBox).setText("Change:").setTextFont((e=>e.setSize(8))),{labelLastValue:a,labelChange:n.addElement(r.TextBox).setText("").setTextFont((e=>e.setSize(8)))}})),B=F.map(((e,t)=>{const s=e.addLineSeries({dataPattern:{pattern:"ProgressiveX",regularProgressiveStep:!0},automaticColorIndex:t}).setName("< Stock name >").setStrokeStyle((e=>e.setThickness(1))).setDataCleaning({minDataPointCount:1e3}).setCursorResultTableFormatter(((e,t,n,a,o)=>e.addRow(s.getName()).addRow(T.hhmmssmmm(o.x-window.performance.now())).addRow("Value: ",s.axisY.formatValue(o.y))));return s}));Promise.all(new Array(10).fill(0).map((e=>w().setNumberOfPoints(M).generate().toPromise().then((e=>{const t=10+2e3*Math.random(),s=.03*t,n=e.reduce(((e,t)=>Math.min(e,t.y)),Number.MAX_SAFE_INTEGER),a=(e.reduce(((e,t)=>Math.max(e,t.y)),-Number.MAX_SAFE_INTEGER)-n)/2,o=n+a;return e.map((e=>t+(e.y-o)/a*s))})).then((e=>(e.push(...e.slice().reverse()),e)))))).then((e=>{const t=e[0].length,s=B.map((t=>({series:t,dataSet:e[Math.round(Math.random()*(e.length-1))]}))),n=[];s.forEach((e=>{const t=n.find((t=>t.dataSet===e.dataSet));t?t.seriesList.push(e.series):n.push({dataSet:e.dataSet,seriesList:[e.series],visibleDataPoints:[]})}));const a=n.length;let o=-3e4;const i=()=>{const e=window.performance.now(),s=n.map((e=>[]));for(let i=o+1;i<e;i+=1){let e=i%t;for(;e<0;)e+=t;for(let t=0;t<a;t+=1){const a=n[t].dataSet[e];s[t].push({x:i,y:a})}o=i}n.forEach(((e,t)=>{const n=s[t];e.seriesList.forEach((e=>{e.add(n)}));const a=e.seriesList[0].axisY.formatValue(n[n.length-1].y);n.length<1e5&&e.visibleDataPoints.push(...n),e.seriesList.forEach((e=>{A[F.indexOf(e.chart)].labelLastValue.setText(a)}))})),requestAnimationFrame(i)};i();const r=new c({color:m(0,255,0)}),l=new c({color:m(255,0,0)});setInterval((()=>{n.forEach(((e,t)=>{e.visibleDataPoints.length>M&&(e.visibleDataPoints=e.visibleDataPoints.slice(e.visibleDataPoints.length-M));const s=e.visibleDataPoints[0].y,n=e.visibleDataPoints[e.visibleDataPoints.length-1].y,a=n>s?`${(100*(n/s-1)).toFixed(1)}%`:`-${(100*(1-n/s)).toFixed(1)}%`;e.seriesList.forEach((e=>{A[F.indexOf(e.chart)].labelChange.setText(a).setTextFillStyle(n>s?r:l)}))}))}),2e3)}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);