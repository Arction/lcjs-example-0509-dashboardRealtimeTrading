(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,s)=>{const n=s(377),r=s(613),{lightningChart:a,emptyLine:o,UIElementBuilders:i,UIBackgrounds:l,emptyFill:c,SolidLine:d,AxisTickStrategies:u,AxisScrollStrategies:m,UIOrigins:h,TimeFormattingFunctions:g,UIDraggingModes:S,MouseStyles:f,Themes:p}=n,{createProgressiveTraceGenerator:y}=r,x=window.location.search,T="true"===new URLSearchParams(x).get("full"),k=T?10:3,w=T?10:3,E=6e4,I=a({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({numberOfColumns:k,numberOfRows:w+1}).setSplitterStyle(new d({thickness:0})),M=I.createUIPanel({columnIndex:0,rowIndex:0,columnSpan:k}),A=T?24:64,b=I.engine.container.getBoundingClientRect().height;I.setRowHeight(0,w*A/(b-A));const P=[];for(let e=0;e<k;e+=1)for(let t=0;t<w;t+=1){const s=I.createChartXY({columnIndex:e,rowIndex:t+1}).setTitleFillStyle(c).setTitleMargin({top:0,bottom:0}).setPadding(0).setUserInteractions(void 0).setCursor((e=>e.setTickMarkerXVisible(!1).setTickMarkerYVisible(!1).setAutoFitStrategy(void 0)));s.getDefaultAxisX().setTickStrategy(u.Empty).setScrollStrategy(m.progressive).setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-E,stopAxisAfter:!1}))).setStrokeStyle(o).setAnimationScroll(!1).setTitleEffect(!1),s.getDefaultAxisY().setTickStrategy(u.Empty).setStrokeStyle(o).setAnimationScroll(!1).setTitleEffect(!1),s.setTitleEffect(!1),s.setSeriesBackgroundEffect(!1),P.push(s)}M.addUIElement(i.TextBox.setBackground(l.None)).setText(k*w+" live channels (1 ms resolution) 1 minute history").setPointerEvents(!1).setPosition({x:50,y:100}).setOrigin(h.CenterTop),T||M.addUIElement(i.TextBox).setText("Click here to show full 10x10 dashboard").setPosition({x:50,y:100}).setOrigin(h.CenterTop).setMargin(30).setDraggingMode(S.notDraggable).setMouseStyle(f.Point).addEventListener("click",(()=>{let e=window.location.href;e+=(e.split("?")[1]?"&":"?")+"full=true",window.location.href=e}));const U=P.map(((e,t)=>e.addPointLineAreaSeries({dataPattern:"ProgressiveX",automaticColorIndex:t}).setName(`Channel ${t+1}`).setStrokeStyle((e=>e.setThickness(1))).setAreaFillStyle(c).setMaxSampleCount(E).setEffect(!1)));Promise.all(new Array(10).fill(0).map((e=>y().setNumberOfPoints(E).generate().toPromise().then((e=>{const t=10+2e3*Math.random(),s=.03*t,n=e.reduce(((e,t)=>Math.min(e,t.y)),Number.MAX_SAFE_INTEGER),r=(e.reduce(((e,t)=>Math.max(e,t.y)),-Number.MAX_SAFE_INTEGER)-n)/2,a=n+r;return e.map((e=>t+(e.y-a)/r*s))})).then((e=>(e.push(...e.slice().reverse()),e)))))).then((e=>{const t=e[0].length,s=U.map((t=>({series:t,dataSet:e[Math.round(Math.random()*(e.length-1))]}))),n=[];s.forEach((e=>{const t=n.find((t=>t.dataSet===e.dataSet));t?t.seriesList.push(e.series):n.push({dataSet:e.dataSet,seriesList:[e.series]})}));const r=n.length;let a=-3e4;const o=()=>{const e=window.performance.now(),s=n.map((e=>[]));for(let o=a+1;o<e;o+=1){let e=o%t;for(;e<0;)e+=t;for(let t=0;t<r;t+=1){const r=n[t].dataSet[e];s[t].push(r)}a=o}n.forEach(((e,t)=>{const n=s[t];e.seriesList.forEach((e=>{e.appendSamples({yValues:n})}))})),requestAnimationFrame(o)};o()}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);